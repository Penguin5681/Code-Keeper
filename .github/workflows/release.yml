name: Release Flutter Windows App

on:
  push:
    branches:
      - prod
    tags:
      - 'v*'

jobs:
  validate:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.5'
          channel: 'stable'
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: Analyze project source
        run: flutter analyze

      - name: Run tests
        run: flutter test

  build:
    needs: validate
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.5'
          channel: 'stable'
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Build Windows Release
        run: flutter build windows --release

      - name: Create Release Artifact
        run: |
          cd build/windows/x64/runner/Release
          7z a -tzip ../../../../../code-keeper-windows.zip *

      - name: Generate Version
        id: version
        run: |
          $version = if ($env:GITHUB_REF.StartsWith("refs/tags/")) { 
            $env:GITHUB_REF.Replace('refs/tags/v', '') 
          } else { 
            "1.0.0-$(Get-Date -Format 'yyyyMMdd-HHmmss')" 
          }
          echo "version=$version" >> $env:GITHUB_OUTPUT
        shell: pwsh

      - name: Generate Release Notes
        id: release_notes
        run: |
          $lastTag = $(try { git describe --tags --abbrev=0 } catch { 'HEAD~10' })
          echo "### Code Keeper Release" > release_notes.md
          echo "Version: ${{ steps.version.outputs.version }}" >> release_notes.md
          echo "" >> release_notes.md
          echo "**Release Date:** $(Get-Date -Format "yyyy-MM-dd")" >> release_notes.md
          echo "" >> release_notes.md
          echo "### Changes" >> release_notes.md
          git log "$lastTag..HEAD" --pretty=format:"* %s" >> release_notes.md
        shell: pwsh

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: code-keeper-windows.zip
          body_path: release_notes.md
          tag_name: ${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || format('v{0}', steps.version.outputs.version) }}
          draft: false
          prerelease: ${{ !startsWith(github.ref, 'refs/tags/') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    needs: build
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify Success
        if: success()
        run: |
          echo "::notice::Release build successful! New version available at: https://github.com/${{ github.repository }}/releases/latest"

      - name: Notify Failure
        if: failure()
        run: |
          echo "::error::Release build failed! Please check the logs for details."
